{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import {Component, InjectionToken, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AlertController, IonicPage, NavController, ToastController} from 'ionic-angular';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { Platform } from 'ionic-angular';\nimport { Facebook } from '@ionic-native/facebook';\n\nimport {UserService} from '../../providers/providers';\nimport {MainPage} from '../pages';\n\n\nexport const WINDOW = new InjectionToken<Window>(\"WindowToken\");\n\nexport function _window(): Window {\n  return window;\n}\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage implements OnInit {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { email: string, password: string} = {email: null, password: null};\n  recaptchaVerifier: any;\n\n  // Our translated text strings\n  private loginErrorString: string = 'Error Logging In';\n\n  constructor(public navCtrl: NavController,\n              public user: UserService,\n              private fb: Facebook, private platform: Platform,\n              private alertCtrl: AlertController,\n              public toastCtrl: ToastController,\n              private afAuth: AngularFireAuth,\n              public translateService: TranslateService) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n  }\n\n  ngOnInit() {\n    this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"sign-in-button\", {\n      \"size\": \"invisible\",\n      \"callback\": function (response) {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        // onSignInSubmit();\n      }\n    });\n  }\n\n  signInWithFacebook() {\n    if (this.platform.is('cordova')) {\n      console.log(1);\n      return this.fb.login(['email', 'public_profile']).then(res => {\n        const facebookCredential = firebase.auth.FacebookAuthProvider.credential(res.authResponse.accessToken);\n        return firebase.auth().signInWithCredential(facebookCredential);\n      })\n    }\n    else {\n      this.afAuth.app.auth().signInWithPopup(new firebase.auth.FacebookAuthProvider()).then(() => {\n        this.navCtrl.push(MainPage);\n      })\n    }\n\n  }\n  signInWithGoogle() {\n    // this.afAuth.app.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(() => {\n    //   this.navCtrl.push(MainPage);\n    // });\n  }\n\n  signIn(account: { email: string, password: string}) {\n    let auth = this.afAuth.app.auth();\n    let nav = this.navCtrl;\n    this.afAuth.app.auth().createUserWithEmailAndPassword(account.email, account.password)\n      .then(confirmationResult => {\n        // const a = prompt(\"Enter Verification Code\");\n        console.log(confirmationResult);\n        nav.push(MainPage);\n      })\n      .catch(function (error) {\n        // this._loader.hide();\n        auth.signInWithEmailAndPassword(account.email, account.password).then(() => {\n            nav.push(MainPage);\n        });\n        console.error(\"SMS not sent\", error);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}